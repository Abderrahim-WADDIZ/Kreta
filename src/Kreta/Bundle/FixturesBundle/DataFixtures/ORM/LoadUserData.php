<?php

/**
 * This file belongs to Kreta.
 * The source code of application includes a LICENSE file
 * with all information about license.
 *
 * @author benatespina <benatespina@gmail.com>
 * @author gorkalaucirica <gorka.lauzirika@gmail.com>
 */

namespace Kreta\Bundle\FixturesBundle\DataFixtures\ORM;

use Doctrine\Common\Persistence\ObjectManager;
use Kreta\Bundle\FixturesBundle\DataFixtures\DataFixtures;

/**
 * Class LoadUserData.
 *
 * @package Kreta\Bundle\FixturesBundle\DataFixtures\ORM
 */
class LoadUserData extends DataFixtures
{
    /**
     * {@inheritdoc}
     */
    public function load(ObjectManager $manager)
    {
        $photos = $this->loadMedias($manager, 'kreta_user.uploader.image_user', $this->userPath);

        $user = $this->createUser(['email' => 'kreta@kreta.com'], ['ROLE_ADMIN']);
        $user->setPhoto($photos[0]);

        $manager->persist($user);

        $i = 1;
        foreach ($this->userInfoList as $userInfo) {
            $user = $this->createUser($userInfo);
            $user->setPhoto($photos[$i]);
            $i++;

            $manager->persist($user);
        }

        $manager->flush();
    }

    /**
     * {@inheritdoc}
     */
    public function getOrder()
    {
        return 0;
    }

    /**
     * Returns a new instance of user with vales.
     *
     * @param string[] $userInfo The array contains first name, last name and email
     * @param string[] $roles The array that contains roles
     *
     * @return \Kreta\Component\User\Model\Interfaces\UserInterface
     */
    protected function createUser(array $userInfo = [], array $roles = ['ROLE_USER'])
    {
        $user = $this->container->get('kreta_user.factory.user')->create();
        if ($userInfo['email'] === 'kreta@kreta.com') {
            $user->setFirstname('Kretauser');
            $user->setLastname('Kretasurname');
            $user->setEmail($userInfo['email']);
        } else {
            $user->setFirstname($userInfo['firstName']);
            $user->setLastname($userInfo['lastName']);
            $user->setEmail($userInfo['email']);
        }
        $user->setPlainPassword(123456);
        $user->setRoles($roles);
        $user->setEnabled(true);

        return $user;
    }

    /**
     * This info is generated by "Fake Name Generator"
     * http://www.fakenamegenerator.com/
     *
     * Array that contains first name, last name and email.
     *
     * @return string[]
     */
    protected $userInfoList = [
        ['firstName' => 'Stephen',   'lastName' => 'Johnstone',  'email' => 'stephenjohnstone@jourrapide.com'],
        ['firstName' => 'Grace',     'lastName' => 'Archer',     'email' => 'gracearcher@fleckens.hu'],
        ['firstName' => 'Etelvina',  'lastName' => 'Domínquez',  'email' => 'etelvinadominquezsotelo@rhyta.com'],
        ['firstName' => 'Karol',     'lastName' => 'Posada',     'email' => 'karolposadafierro@teleworm.us'],
        ['firstName' => 'William',   'lastName' => 'Barnes',     'email' => 'williamsbarnes@cuvox.de'],
        ['firstName' => 'Tom',       'lastName' => 'Ferguson',   'email' => 'tomferguson@cuvox.de'],
        ['firstName' => 'Heidi',     'lastName' => 'Sinclair',   'email' => 'heidisinclair@superrito.com'],
        ['firstName' => 'Enoc',      'lastName' => 'Meza',       'email' => 'enocmezahidalgo@dayrep.com'],
        ['firstName' => 'Eden',      'lastName' => 'Scott',      'email' => 'edenscott@gustr.com'],
        ['firstName' => 'Theodore',  'lastName' => 'Gordon',     'email' => 'theodoregordon@jourrapide.com'],
        ['firstName' => 'Lawrence',  'lastName' => 'Mitchell',   'email' => 'lawrenceMitchell@gustr.com'],
        ['firstName' => 'Eryn',      'lastName' => 'Wright',     'email' => 'erynwright@rhyta.com'],
        ['firstName' => 'Haiden',    'lastName' => 'McLean',     'email' => 'haidenmcLean@gustr.com'],
        ['firstName' => 'Danyl',     'lastName' => 'Alexander',  'email' => 'danylalexander@superrito.com'],
        ['firstName' => 'Llano',     'lastName' => 'Haro',       'email' => 'llanosharosegovia@jourrapide.com'],
        ['firstName' => 'Edward',    'lastName' => 'Sullivan',   'email' => 'edwardsullivan@gustr.com'],
        ['firstName' => 'Louisa',    'lastName' => 'Jamieson',   'email' => 'louisajamieson@jourrapide.com'],
        ['firstName' => 'Marie',     'lastName' => 'Fulton',     'email' => 'marielafulton@dayrep.com'],
        ['firstName' => 'Millie',    'lastName' => "O'Brien",    'email' => 'millieobrien@dayrep.com'],
        ['firstName' => 'Ornella',   'lastName' => 'Morales',    'email' => 'ornellamoralesLuevano@superrito.com'],
        ['firstName' => 'Leontina',  'lastName' => 'Bernal',     'email' => 'leontinabernalverduzco@superrito.com'],
        ['firstName' => 'Aureo',     'lastName' => 'Prieto',     'email' => 'aureoprietocepeda@cuvox.de'],
        ['firstName' => 'Charlotte', 'lastName' => 'Clubb',      'email' => 'charlottemclubb@rhyta.com'],
        ['firstName' => 'Seth',      'lastName' => 'Thompson',   'email' => 'seththompson@jourrapide.com'],
        ['firstName' => 'Pedro',     'lastName' => 'Jackson',    'email' => 'pedrojjackson@cuvox.de'],
        ['firstName' => 'Floren',    'lastName' => 'Aguilera',   'email' => 'florenceaguileraespinosa@cuvox.de'],
        ['firstName' => 'Michael',   'lastName' => 'Irvin',      'email' => 'michaelirvin@rhyta.com'],
        ['firstName' => 'Preston',   'lastName' => 'Johnstone',  'email' => 'prestonjohnstone@superrito.com'],
        ['firstName' => 'Kristin',   'lastName' => 'Stahr',      'email' => 'kristinrstahr@jourrapide.com'],
        ['firstName' => 'Daisy',     'lastName' => 'Middleton',  'email' => 'daisymiddleton@cuvox.de'],
        ['firstName' => 'Georgia',   'lastName' => 'Farrell',    'email' => 'georgiafarrell@jourrapide.com'],
        ['firstName' => 'Lochlan',   'lastName' => 'McKenzie',   'email' => 'lochlanmckenzie@teleworm.us'],
        ['firstName' => 'Aaliyan',   'lastName' => 'Bray',       'email' => 'aaliyahBray@einrot.com'],
        ['firstName' => 'Wendy',     'lastName' => 'Sloan',      'email' => 'wendymsloan@teleworm.us'],
        ['firstName' => 'Archie',    'lastName' => 'Vaughan',    'email' => 'archievaughan@teleworm.us'],
        ['firstName' => 'Vesta',     'lastName' => 'Alcalá',     'email' => 'vestaalcalasisneros@gustr.com'],
        ['firstName' => 'Roy',       'lastName' => 'Borges',     'email' => 'roymborges@rhyta.com'],
        ['firstName' => 'Kenneth',   'lastName' => 'Johnson',    'email' => 'kennethvjohnson@jourrapide.com'],
        ['firstName' => 'Harry',     'lastName' => 'Gray',       'email' => 'harrygray@teleworm.us'],
        ['firstName' => 'Amy',       'lastName' => 'Jones',      'email' => 'amyjones@teleworm.us'],
        ['firstName' => 'Aaron',     'lastName' => 'Richardson', 'email' => 'aaronrichardson@cuvox.de'],
        ['firstName' => 'Anthony',   'lastName' => 'King',       'email' => 'anthonyiking@dayrep.com'],
        ['firstName' => 'Sofia',     'lastName' => 'Hamilton',   'email' => 'sofiahamilton@einrot.com'],
        ['firstName' => 'Ildegunda', 'lastName' => 'Vázquez',    'email' => 'ildegundavazquezQuiroz@rhyta.com'],
    ];
}
