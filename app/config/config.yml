# This file belongs to Kreta.
# The source code of application includes a LICENSE file
# with all information about license.
#
# @author benatespina <benatespina@gmail.com>
# @author gorkalaucirica <gorka.lauzirika@gmail.com>

imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: doctrine.yml }

parameters:
    assetic.ruby.bin: "%ruby_bin%"
    assetic.filter.compass.images_dir: "%kernel.root_dir%/Resources/sprites"
    assetic.filter.compass.http_path:  "/"
    assetic.filter.compass.generated_images_path: "%kernel.root_dir%/../web/images/"

framework:
    #esi: ~
    #translator: { fallback: "%locale%" }
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session: ~
    fragments: ~
    http_method_override: true

twig:
    debug: "%kernel.debug%"
    strict_variables: "%kernel.debug%"

assetic:
    debug: "%kernel.debug%"
    use_controller: false
    bundles:
        - KretaWebBundle
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        compass:
            load_paths:
                - '%kernel.root_dir%/vendor/zurb/foundation/scss'
            bin: "%compass_route%"
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

swiftmailer:
    transport:  %mailer_transport%
    encryption: %mailer_encryption%
    port:       %mailer_port%
    host:       %mailer_host%
    username:   %mailer_user%
    password:   %mailer_password%
    spool:      { type: memory }

bazinga_hateoas:
    metadata:
        cache: file
        file_cache:
            dir: %kernel.cache_dir%/hateoas

fos_oauth_server:
    db_driver: orm
    access_token_class: Kreta\Bundle\Api\ApiCoreBundle\Model\AccessToken
    auth_code_class: Kreta\Bundle\Api\ApiCoreBundle\Model\AuthCode
    client_class: Kreta\Bundle\Api\ApiCoreBundle\Model\Client
    refresh_token_class: Kreta\Bundle\Api\ApiCoreBundle\Model\RefreshToken
    service:
        user_provider: kreta_core.user_provider
        options:
            supported_scopes: user

fos_rest:
    routing_loader:
        include_format: false
        default_format: json
    param_fetcher_listener: true
    body_listener:
        array_normalizer: fos_rest.normalizer.camel_keys

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Kreta\Component\Core\Model\User

hwi_oauth:
    connect:
        account_connector: kreta_core.user_provider
    firewall_name: main
    fosub:
        username_iterations: 30
        properties:
            bitbucket: bitbucket_id
            github: github_id
    resource_owners:
        github:
            type: github
            client_id: %oauth.github.client_id%
            client_secret: %oauth.github.client_secret%
        bitbucket:
            type: bitbucket
            client_id: %oauth.bitbucket.client_id%
            client_secret: %oauth.bitbucket.client_secret%

jms_serializer:
    metadata:
        directories:
            kreta-core:
                namespace_prefix: "Kreta\\Component\\Core"
                path: "@KretaApiCoreBundle/Resources/config/serializer"
            FOSUserBundle:
                namespace_prefix: "FOS\\UserBundle"
                path: "@KretaApiCoreBundle/Resources/FOSUserBundle/serializer"

knp_gaufrette:
    adapters:
        kreta_image_users:
            local:
                directory: %kernel.root_dir%/../web/media/image
#                directory: %kernel.root_dir%/../web/media/image/users
                create: true
        kreta_image_projects:
            local:
                directory: %kernel.root_dir%/../web/media/image
#                directory: %kernel.root_dir%/../web/media/image/projects
                create: true
    filesystems:
        kreta_image_users:
            adapter: %users.image.uploader.filesystem%
        kreta_image_projects:
            adapter: %projects.image.uploader.filesystem%

liip_imagine:
    loaders:
        default:
            filesystem:
                data_root: %kernel.root_dir%/../web/media/image
#        projects:
#            filesystem:
#                data_root: %kernel.root_dir%/../web/media/image/projects
#        users:
#            filesystem:
#                data_root: %kernel.root_dir%/../web/media/image/users
    filter_sets:
        kreta_small:
            filters:
                thumbnail: { size: [150, 150], mode: outbound }
        kreta_medium:
            filters:
                thumbnail: { size: [240, 180], mode: outbound }
        kreta_large:
            filters:
                thumbnail: { size: [640, 480], mode: outbound }

nelmio_api_doc: ~

nelmio_cors:
    paths:
        '^/':
            allow_origin: ['*']
            allow_headers: ['X-Custom-Auth']
            allow_methods: ['POST', 'PUT', 'DELETE']
            max_age: 3600

sensio_framework_extra:
    view:
        annotations: true
